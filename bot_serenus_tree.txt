class Node :
    def __init__(self,question,keyword):
        self.question = question
        self.needs = '`Trouver le sommeil`\n`Equilibre émotionnelle`\n`faire face à la dépression`\n`briser la solitude`'
        self.keyword = keyword
        self.list_child_node = []

    def user_response(self):
        print(self.question)
        print(self.needs)
        need = input()
        for child in self.list_child_node:
            if child.keyword in need:
                print("musique, acupuncture, podcast")
                branch_one.user_response()
            else:
                print("rentrer un des mots clés")

    def insert(self, node, question):
        if self.question == question :
            self.list_child_node.append(node)
        else:
            for child in self.list_child_node:
                child.insert(node,question)



Root = Node("Quels sont vos besoins ?","")
Root.insert(Node("Dites nous comment nous pouvons vous aider !","Trouver le sommeil"),"Quels sont vos besoins ?")
Root.insert(Node("Quel style de musique ?","musique"),"Dites nous comment nous pouvons vous aider !")
Root.insert(Node("Quel style de meditation ?","méditation"),"Dites nous comment nous pouvons vous aider !")


first_node =Node("Quels sont vos besoins ?","",
[Node("Dites nous comment nous pouvons vous aider !","Trouver le sommeil",[]),
Node("","Equilibre émotionnelle",[]),
Node("","faire face à la dépression",[]),
Node("","briser la solitude",[])])


# naviguer dans la premiere branche
branch_one =Node("Dites nous comment nous pouvons vous aider !","",
[Node("","musique",[]),
Node("","acupuncture",[]),
Node("","podcast",[]),
Node("","lithothérapie",[])])

branch_two =Node("Dites nous comment nous pouvons vous aider !","",
[Node("","Sophrologie",[]),
Node("","comedie",[]),
Node("","nutrition",[]),
Node("","massage",[])])

branch_three =Node("Dites nous comment nous pouvons vous aider !","",
[Node("","consultation",[]),
Node("","comedie",[]),
Node("","conseil",[]),
Node("","sport",[])])

#appel à la premiere noeuds
first_node.user_response()










""" class Node:
    def __init__(self):
        self.liste_request = []
        self.liste_response = []
        self.keyWord = ""

    def insert_request(self, the_request):
       if the_request not in self.liste_request:
            self.liste_request.append(the_request)
            for therequest in self.liste_request:
                print(therequest)
       else:
            print('questions déjà existant !')
      
       return self.liste_request """